#!/bin/bash

mkdir -p /tmp/sptest

$SP_CLICKHOUSE_BIN client \
    --host ${SP_CLICKHOUSE_HOST} \
    --port ${SP_CLICKHOUSE_1_PORT} \
    --query "SELECT name FROM system.parts WHERE database = 'sptest' AND table = 'kafka_table_local' ORDER BY name" \
    > /tmp/sptest/node1_parts_local.list

$SP_CLICKHOUSE_BIN client \
    --host ${SP_CLICKHOUSE_HOST} \
    --port ${SP_CLICKHOUSE_2_PORT} \
    --query "SELECT name FROM system.parts WHERE database = 'sptest' AND table = 'kafka_table_local' ORDER BY name" \
    > /tmp/sptest/node2_parts_local.list

hdfs_root=$(
    $SP_CLICKHOUSE_BIN client \
        --host ${SP_CLICKHOUSE_HOST} \
        --port ${SP_CLICKHOUSE_2_PORT} \
        --query "SELECT substring(data_paths[1], 33, -1) FROM system.tables WHERE database = 'sptest' AND name = 'kafka_table_local' LIMIT 1"
)

echo "checking node1..."
docker exec -it sp-hdfs /usr/local/hadoop/bin/hdfs dfs -ls -h /user/sptest/node1/${hdfs_root} |
    tail -n +2 | sort | while read part; do
    part_name=${part##*/}
    match_name=$(cat /tmp/sptest/node1_parts_local.list | grep ${part_name:0:-1})
    if [ "$match_name" == "" ]; then
        echo $part
    fi
done

echo "checking node2..."
docker exec -it sp-hdfs /usr/local/hadoop/bin/hdfs dfs -ls -h /user/sptest/node2/${hdfs_root} |
    tail -n +2 | sort | while read part; do
    part_name=${part##*/}
    match_name=$(cat /tmp/sptest/node2_parts_local.list | grep ${part_name:0:-1})
    if [ "$match_name" == "" ]; then
        echo $part
    fi
done

rm -r /tmp/sptest